# awk_utils

A set of awk utilities.

make_barchart
-------------
Given a sequence of tokens, or a sequence of comma separated tokens and values,
create a bar chart of the token counts or token values.

Example output given input containing the tokens xyz, abc, and rpq:
  abc     81      ==================================================
  xyz     54      =================================
  rpq     27      ================

Utility folder contains sample input files.

calc_stat
---------
Given a sequence of numbers, calculate count, sum, average, median, minimum,
maximum, variance and standard deviation.

This awk script uses gawk's asort, and hence requires gawk.

Sample output:
  cnt: 6
  sum: 96.6
  avg: 16.1
  med: 10.5
  min: -1
  max: 42
  var: 278.38
  std: 16.6847

flatten_data
------------
Given single or multi column input, flatten the input into a single line.
For a single column input, convert into space delimited single line. For a
multi column input, the default is to convert second column into a space
delimited single line. The default behavior can be modified by using the
two variables 'col' and 'first'. The variable 'col' can be used to specify
which column to flatten, and the variable 'first' can be used to specify
that first column should also be flattened.

For example, if the output of calc_stat is used as input to flatten, then
the following output is generated:

6 96.6 16.1 10.5 -1 42 278.38 16.6847

Using '-v first=1' on the same input, will generate the following output:

cnt: 6 sum: 96.6 avg: 16.1 med: 10.5 min: -1 max: 42 var: 278.38 std: 16.6847

parse_kvpmsg
------------
Intended to be used from other gawk scripts.

Parse messages formatted as:
  <type>:<name>=<value>,<name>=<value>...

Expects the user gawk script to @include parse_kvpmsg.awk, and to define
an onKVPMessage function which will be called with the parsed message:
  onKVPMessage(type, nameValueMap)

The user script calls parseKVPMessage with each read line:
  parseKVPMessage($0)

Utility folder contains samle input file and 2 sample scripts that
process the sample data.
